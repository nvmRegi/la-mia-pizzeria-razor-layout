@{
    Layout = null;
}

<!doctype html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesuheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">

    <title>Esercizi Razor</title>
  </head>
  <body>
    <h1>Hello Razor!</h1>

    <div>
        <p><strong>
            1. Dichiarare una variabile valorizzandola con il nostro nome.<br />
            Dichiarare un'altra variabile valorizzandola con il nostro cognome.<br />
            Stampare il nostro nome e cognome all'interno di un tag h2.
        </strong></p>

        @{
            string nome = "Regine";
            string cognome = "Cabael";
        }
        <h2>Il mio nome è @nome @cognome</h2>
    </div>

    <div>
        <p><strong>
            2. Creare una funzione che stampa la somma dei numeri che vanno da 1 a n (con n passato come parametro - n incluso)<br />
            Stampare dentro uno span il risultato.
        </strong></p>
        
        @{
            int sommaNumeri(int n)
            {
                int somma = 1;
                for(int i = 2; i < n+1; i++){
                    somma += i;
                }
                return somma;
            }
        }
        <p>La somma dei numeri è @sommaNumeri(10)</p>
    </div>

    <div>
        <p><strong>
            3. Contare quante volte la lettera a è presente nalla frase "nel mezzo del cammin di nostra vita" e stampare questo valore in pagina
        </strong></p>

        @{
            string frase = "nel mezzo del cammin di nostra vita";
            int conteggio = frase.Split("a").Length - 1;            
        }

        }
        <p>La lettera 'a' è presente: <span>@conteggio</span></p>


    </div>

    <div>
        <p><strong>
            4. Creare una List<int> di 20 numeri interi (generati random da 1 a 90, 1 e 90 inclusi) e mostrare in pagina solo i numeri compresi tra 20 e 70
        </strong></p>

        @{
            List<int> listaNumeri = new List<int>();
            Random random = new Random();
            for(int i = 0; i < 20; i++)
            {
                int numeroRandom = random.Next(1, 91);
                listaNumeri.Add(numeroRandom);
            }
        }

        @foreach(int numero in listaNumeri)
        {
            if(numero > 20 && numero < 70)
            {
                <span>@numero</span>
            }
        }
    </div>

    <div>
        <p><strong>
            5. Stampare in pagina la data e l'ora attuale (usando la classe DateTime) con il formato anno-mese-giorno ore:minuti:secondi
        </strong></p>

        @{
            DateTime datetime = DateTime.Now;
        }
        <p>Oggi è @datetime.ToString("yyyy'-'MM'-'dd' 'HH':'mm':'ss")</p>
    </div>

    <div>
        <p><strong>
            6. Partendo dalla data di oggi (usando la classe DateTime) stampare in pagina<br />
                a  la data di 7 giorni fa<br />
                b. che giorno della settimana è oggi (il risultato dovrà essere il nome del giorno (Lunedì, Martedì, ...)<br />
                c. che giorno della settimana sarà nello stesso giorno e mese di oggi ma tra un anno (il risultato dovrà essere il nome del giorno (Lunedì, Martedì, ...)
        </strong></p>
        

        <p>a. 7 Giorni fa era il @datetime.AddDays(-7)</p>
        <p>b. Oggi è @datetime.ToString("ddd")</p>
        <p>c. Il giorno della settimana del @datetime.AddYears(1) sarà @datetime.AddYears(1).ToString("ddd")</p>
    </div>


    <!-- Option 1: Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>

  </body>
</html>